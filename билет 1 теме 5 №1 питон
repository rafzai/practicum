import numpy as np
from scipy.interpolate import CubicSpline
import matplotlib.pyplot as plt

# Given data points
x = np.array([0.0, 1.0, 2.0, 3.0, 4.0])
y = np.array([0.0, 0.5, 0.86603, 1.0, 0.86603])

# Constructing the cubic spline with natural boundary conditions (zero curvature at endpoints)
cs = CubicSpline(x, y, bc_type='natural')

# Evaluate the spline at x* = 1.5
x_star = 1.5
y_star = cs(x_star)
print(f"Value of the function at x* = {x_star}: {y_star}")

# Plotting the spline and data points for visualization
x_range = np.linspace(min(x), max(x), 500)
y_spline = cs(x_range)

plt.plot(x, y, 'o', label='Data points')
plt.plot(x_range, y_spline, '-', label='Cubic spline')
plt.plot(x_star, y_star, 'ro', label=f'Spline({x_star}) = {y_star}')
plt.legend()
plt.xlabel('x')
plt.ylabel('y')
plt.title('Cubic Spline Interpolation')
plt.grid(True)
plt.show()
