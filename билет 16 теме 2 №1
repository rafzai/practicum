import numpy as np

# Function to calculate distance from a point to a line
def distance_point_to_line(a, b, c, x0, y0):
    return abs(a * x0 + b * y0 + c) / np.sqrt(a**2 + b**2)

# Function to find intersection of two lines
def intersection_of_lines(a1, b1, c1, a2, b2, c2):
    A = np.array([[a1, b1], [a2, b2]])
    B = np.array([-c1, -c2])
    return np.linalg.solve(A, B)

# Function to find angle between two lines
def angle_between_lines(a1, b1, a2, b2):
    return np.arccos((a1 * a2 + b1 * b2) / (np.sqrt(a1**2 + b1**2) * np.sqrt(a2**2 + b2**2)))

# Randomly generated parameters for lines and point
a1, b1, c1 = 1, -1, -3  # Line 1: x - y - 3 = 0
a2, b2, c2 = 1, 1, -1   # Line 2: x + y - 1 = 0
x0, y0 = 2, 1  # Point (2, 1)

# Distance from the point to each line
dist1 = distance_point_to_line(a1, b1, c1, x0, y0)
dist2 = distance_point_to_line(a2, b2, c2, x0, y0)

# Intersection point of the two lines
intersection = intersection_of_lines(a1, b1, c1, a2, b2, c2)

# Distance from the point to the intersection point of the lines
dist_to_intersection = np.sqrt((x0 - intersection[0])**2 + (y0 - intersection[1])**2)

# Angle between the two lines
angle = angle_between_lines(a1, b1, a2, b2)

print(f"Distance from point to line 1: {dist1}")
print(f"Distance from point to line 2: {dist2}")
print(f"Intersection point of the lines: {intersection}")
print(f"Distance from point to intersection: {dist_to_intersection}")
print(f"Angle between the lines: {np.degrees(angle)} degrees")
