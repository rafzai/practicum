#include <iostream>
#include <vector>

void thomas_algorithm(std::vector<double> &a, std::vector<double> &b, std::vector<double> &c, std::vector<double> &d, std::vector<double> &x) {
    int n = d.size();
    std::vector<double> c_star(n, 0.0);
    std::vector<double> d_star(n, 0.0);
    
    c_star[0] = c[0] / b[0];
    d_star[0] = d[0] / b[0];

    for (int i = 1; i < n; ++i) {
        double m = b[i] - a[i] * c_star[i - 1];
        c_star[i] = c[i] / m;
        d_star[i] = (d[i] - a[i] * d_star[i - 1]) / m;
    }

    x[n - 1] = d_star[n - 1];
    for (int i = n - 2; i >= 0; --i) {
        x[i] = d_star[i] - c_star[i] * x[i + 1];
    }
}

int main() {
    std::vector<double> a = {0, -8, -5, 1, -4};
    std::vector<double> b = {14, 14, 17, 5, -10};
    std::vector<double> c = {9, 6, 8, -2, 0};
    std::vector<double> d = {125, -56, 144, 36, 70};
    std::vector<double> x(d.size(), 0.0);

    thomas_algorithm(a, b, c, d, x);

    std::cout << "Solution using Thomas algorithm:" << std::endl;
    for (double xi : x) {
        std::cout << xi << " ";
    }
    std::cout << std::endl;

    return 0;
}
