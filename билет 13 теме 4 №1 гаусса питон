def gauss_elimination(a, b):
    n = len(b)
    # Elimination phase
    for k in range(n-1):
        for i in range(k+1, n):
            if a[i][k] != 0.0:
                factor = a[i][k] / a[k][k]
                for j in range(k, n):
                    a[i][j] = a[i][j] - factor * a[k][j]
                b[i] = b[i] - factor * b[k]
    # Back substitution phase
    x = [0 for i in range(n)]
    x[n-1] = b[n-1] / a[n-1][n-1]
    for i in range(n-2, -1, -1):
        sum_ax = 0
        for j in range(i+1, n):
            sum_ax += a[i][j] * x[j]
        x[i] = (b[i] - sum_ax) / a[i][j]
    return x

# Coefficient matrix
A = [
    [-6, 5, 8, 8],
    [5, 2, 4, 5],
    [7, 1, 2, 5],
    [-6, 8, 8, 5]
]

# Constant terms
B = [101, 1, -63, -1]

X = gauss_elimination(A, B)

print("Solution using Gaussian elimination method:")
print(X)
